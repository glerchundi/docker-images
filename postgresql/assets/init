#!/bin/bash
set -e

# start sshd server and add authorized keys
if [ ! -z "$SSH_AUTHORIZED_KEYS" ]; then
    echo "Starting sshd..."
    /usr/bin/supervisord
    supervisorctl start sshd
    ssh-authorized-keys $SSH_AUTHORIZED_KEYS
fi

appStart () {
    # fix permissions and ownership of /var/lib/postgresql
    chown -R postgres:postgres /var/lib/postgresql
    chmod 700 /var/lib/postgresql

    # initialize PostgreSQL data directory
    if [ ! -d /var/lib/postgresql/$POSTGRESQL_VERSION/main ]; then
        echo "Initializing database..."
        PG_PASSWORD=$(pwgen -c -n -1 14)
        echo "${PG_PASSWORD}" > /var/lib/postgresql/pwfile
        sudo -u postgres -H /usr/lib/postgresql/$POSTGRESQL_VERSION/bin/initdb \
            --pgdata=/var/lib/postgresql/$POSTGRESQL_VERSION/main \
            --pwfile=/var/lib/postgresql/pwfile \
            --username=postgres \
            --encoding=unicode \
            --auth=trust > /dev/null
    fi

    # start postgresql server
    echo "Starting PostgreSQL server..."
    /etc/init.d/postgresql start

    # warn cause password is present yet.
    if [ -f /var/lib/postgresql/pwfile ]; then
        PG_PASSWORD=$(cat /var/lib/postgresql/pwfile)
        echo "|------------------------------------------------------------------|"
        echo "| PostgreSQL User: postgres, Password: ${PG_PASSWORD}              |"
        echo "|                                                                  |"
        echo "| To remove the PostgreSQL login credentials from the logs, please |"
        echo "| make a note of password and then delete the file pwfile          |"
        echo "| from the data store.                                             |"
        echo "|------------------------------------------------------------------|"
    fi

    # tail and wait to new error log messages
    tail -F /var/log/postgresql/postgresql-$POSTGRESQL_VERSION-main.log
}

appHelp () {
    echo "Available options:"
    echo " app:start          - Start the postgresql server and watch the log (default)"
    echo " app:help           - Displays the help"
    echo " [command]          - Execute the specified linux command eg. bash."
}

case "$1" in
    app:start)
        appStart
        ;;
    app:help)
        appHelp
        ;;
    *)
        if [ -x $1 ]; then
            $1
        else
            prog=$(which $1)
            if [ -n "${prog}" ] ; then
                shift 1
                $prog $@
            else
                appHelp
            fi
        fi
        ;;
esac

exit 0
